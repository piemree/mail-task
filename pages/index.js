import Head from "next/head";
import React, { useState } from "react";
import ReactDOM from "react-dom";
import Button from "@mui/material/Button";
import axios from "axios";
import styles from "../styles/Home.module.css";
import {
  Container,
  TextField,
  Collapse,
  Alert,
  IconButton,
  CircularProgress,
} from "@mui/material";
import { CloseOutlined } from "@material-ui/icons";

export default function Home() {
  const [from, setFrom] = useState({ name: "", email: "" });
  const [subject, setSubject] = useState("");
  const [content, setContent] = useState("");
  const [success, setSuccess] = useState(false);
  const [successMessage, setSuccessMessage] = useState("");
  const [errorr, setError] = useState(false);
  const [errorrMessage, setErrorrMessage] = useState("");
  const [loading, setLoading] = useState(false);
  const [emptyError, setEmptyError] = useState(false);

  const handleSubmit = (event) => {
    event.preventDefault();

    if (
      from.name.length === 0 ||
      from.email.length === 0 ||
      subject.length === 0 ||
      content.length === 0
    ) {
      setEmptyError(true);
      return;
    }

    setLoading(true);
    axios
      .post("/api/email", {
        from: {
          name: from.name,
          email: process.env.EMAIL,
        },
        to: [{ email: process.env.EMAIL }],
        subject,
        htmlContent: `<html><body><h3>From: ${from.email}</h3><p>${content}</p></body></html>`,
      })
      .then((result) => {
        setSuccessMessage(result.data.resultMessage);
        setLoading(false);
        setSuccess(true);
      })
      .catch((err) => {
        setErrorrMessage(err.response.statusText);
        setLoading(false);
        setError(true);
      });
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Email app</title>
        <meta name="description" content="Generated by create next app" />
        <meta charSet="utf-8" />
        <link rel="icon" href="/favicon.ico" />
        <link
          rel="stylesheet"
          href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap"
        />
        <link
          rel="stylesheet"
          href="https://fonts.googleapis.com/icon?family=Material+Icons"
        />
      </Head>

      <Container
        style={{
          padding: "5rem",
          minHeight: "100vh",
          display: "flex",
          justifyContent: "center",
          alignItems: "flex-start",
          flexDirection: "column",
        }}
      >
        <h1>MAIL ME</h1>
        <form
          onSubmit={handleSubmit}
          style={{
            display: "flex",
            justifyContent: "center",
            alignItems: "flex-start",
            flexDirection: "column",
          }}
        >
          <TextField
            label="Name"
            value={from.name}
            onChange={(event) => setFrom({ ...from, name: event.target.value })}
            style={{ marginBottom: "2rem", width: "15rem" }}
            id="my-input"
          />

          <TextField
            label="Email"
            value={from.email}
            onChange={(event) =>
              setFrom({ ...from, email: event.target.value })
            }
            style={{ marginBottom: "2rem", width: "15rem" }}
            id="my-input"
            aria-describedby="my-helper-text"
          />

          <TextField
            label="Subject"
            value={subject}
            onChange={(event) => setSubject(event.target.value)}
            style={{ marginBottom: "2rem", width: "15rem" }}
            id="my-input"
            aria-describedby="my-helper-text"
          />

          <TextField
            value={content}
            onChange={(event) => setContent(event.target.value)}
            id="outlined-multiline-static"
            label="Message"
            multiline
            rows={4}
            style={{ marginBottom: "1rem", width: "25rem" }}
          />

          <Button type="submit">
            {!loading && "Submit"}{" "}
            {loading && <CircularProgress style={{ padding: "10px" }} />}
          </Button>
        </form>
        <Collapse in={success}>
          <Alert
            action={
              <IconButton
                aria-label="close"
                color="inherit"
                size="small"
                onClick={() => {
                  setSuccess(false);
                }}
              >
                <CloseOutlined fontSize="inherit" />
              </IconButton>
            }
            sx={{ mb: 2 }}
          >
            {successMessage}
          </Alert>
        </Collapse>
        <Collapse in={errorr}>
          <Alert
            severity="error"
            action={
              <IconButton
                aria-label="close"
                size="small"
                onClick={() => {
                  setError(false);
                }}
              >
                <CloseOutlined fontSize="inherit" />
              </IconButton>
            }
            sx={{ mb: 2 }}
          >
            {errorrMessage}
          </Alert>
        </Collapse>
        <Collapse in={emptyError}>
          <Alert
            severity="error"
            action={
              <IconButton
                aria-label="close"
                size="small"
                onClick={() => {
                  setEmptyError(false);
                }}
              >
                <CloseOutlined fontSize="inherit" />
              </IconButton>
            }
            sx={{ mb: 2 }}
          >
            Please fill all fields
          </Alert>
        </Collapse>
      </Container>
    </div>
  );
}
